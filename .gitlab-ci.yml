services:
  - docker:18.09.7-dind

default:
  image: docker:stable
  tags:
    - dsp

.test: &test
  stage: build
  image: maven:3.6-jdk-11-alpine
  script:
    - infra/scripts/test-end-to-end.sh
  except:
    - ^v0\.(3|4)-branch$

cache:
  key: "$CI_JOB_NAME"
  paths:
    - .m2/repository

variables:
  DOCKER_HOST: tcp://localhost:2375
  # This is the region of AWS, used by the deployer ecs-deploy
  REGION: "eu-west-1"
  ACCOUNT: "674300753731"
  SERVICE_NAME: "feast"
  # Image name
  IMAGE_NAME: "feast"
  # Elastic Container Registry URL of the package.
  ECR_URL: "674300753731.dkr.ecr.eu-west-1.amazonaws.com/feast"
  IMAGE_TAG: "0.6.${CI_PIPELINE_IID}"
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

before_script:
  - | # ${variable//-/} is a bash replacement that strips the hyphens from the contents of the variable. Needed for API Gateway.
    echo "===== Account => ${ACCOUNT}, Region => ${REGION} ====="
    apk add --no-cache bash curl jq python3 py-pip
    pip3 install awscli
    echo $(python3 --version)
    echo $(pip3 --version)
    $(aws ecr get-login --no-include-email --region ${REGION}  --registry-ids ${ACCOUNT})

stages:
  - build

test:
  <<: *test

"build & publish":
  stage: build
  when: manual
  script:
    - |
      infra/scripts/publish-docker-image.sh \
        --repository ${ECR_URL}/feast-core \
        --tag ${IMAGE_TAG} \
        --file infra/docker/core/Dockerfile

      infra/scripts/publish-docker-image.sh \
        --repository ${ECR_URL}/feast-serving \
        --tag ${IMAGE_TAG} \
        --file infra/docker/serving/Dockerfile

openapi: 3.0.1
info:
  description: 'Feast Authorization Server'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Feast Authorization Server
  version: 1.0.0
servers:
  - url: /v1
paths:
  /healthz:
    get:
      responses:
        "200":
          description: Online
        "500":
          description: Offline
  /readiness:
    get:
      responses:
        "200":
          description: Ready
        "500":
          description: Not Ready
  /checkAccessByResource:
    post:
      operationId: check_access_by_resource_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checkAccessByResourceRequest'
        description: Request containing both the Spring Authorization object as well
          as the resource type and resource Id that access is being requested for.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkAccessByResourceResponse'
          description: Authorized
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkAccessByResourceResponse'
          description: Unauthorized
      summary: Check whether request is authorized to access a specific resource
      x-swagger-router-controller: swagger_server.controllers.default_controller
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    checkAccessByResourceRequest:
      example:
        authentication: '{}'
        resourceType: project
        resourceId: default
      properties:
        authentication:
          properties: {}
          type: object
        resourceType:
          type: string
        resourceId:
          type: string
      type: object
    checkAccessByResourceResponse:
      example:
        allowed: true
        message: message
      properties:
        allowed:
          type: boolean
        message:
          type: string
      type: object